#include <string>
#include <vector>
using namespace std;
int snail[1000][1000], dx[3]={-1, 1, 0}, dy[3]={-1, 0, 1};
int nx, ny, mode;

bool possible(int x, int y, int m, bool chance){
    nx = x + dx[m], ny = y + dy[m];
    if(nx>=0 && ny>=0 && snail[nx][ny]==0){
        mode = m;
        return true;
    } 
    else if(chance){
        if(m==0){
            if(possible(x, y, 1, false)) return true;
        }else if(mode==1){
            if(possible(x, y, 2, false)) return true;
        }else if(mode==2){
            if(possible(x, y, 0, false)) return true;
        }
    }else{
        return false;
    }
    return false;
}

vector<int> solution(int n) {
    vector<int> answer;
    for(int i = 0 ; i<n ; i++) snail[i][0] = i + 1;
    for(int i = 0 ; i<n ; i++) snail[n-1][i] = n + i;
    
    int x = n-1, y = n-1, number = snail[x][y];
    mode = 0;
    while(possible(x, y, mode, true)){
        number++;
        snail[nx][ny] = number;
        x = nx; y = ny;
    }
    
    for(int i = 0 ; i < n ; i++)
        for(int j = 0 ; j <=i ; j++)
            answer.push_back(snail[i][j]);
    return answer;
}
