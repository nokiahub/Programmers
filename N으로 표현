#include <vector>
#define MAX 3200001
#define MAX_TRY 9
using namespace std;

int target, answer = 9;
bool check[MAX];
vector <int> f[MAX_TRY];

void process(int x, int y){
    for(int i = 0; i < f[x].size(); i++){
        for(int j = 0; j < f[y].size(); j++){
            int tmp[4];
            tmp[0] = f[x][i] + f[y][j];
            tmp[1] = f[x][i] - f[y][j];
            tmp[2] = f[x][i] * f[y][j];
            tmp[3] = f[x][i] / f[y][j];
            
            for(int k = 0; k < 4; k++){
                if(tmp[k] > 0 && tmp[k] <= MAX){
                    if(!check[tmp[k]]){
                        check[tmp[k]] = true;
                        f[x + y].push_back(tmp[k]);
                    }
                }
                if(tmp[k] == target){
                    answer = x + y;
                }
            }
        }
    }
    return;
}

int solution(int N, int number) {
    target = number;
    int cur = 0, count = 0;
    
    while(cur <= MAX){
        cur += N;
        f[++count].push_back(cur);
        if(cur == number){
            return count;
        }
        cur *= 10;
    }
    
    for(int i = 2; i < MAX_TRY; i++){
        for(int j = 1; j < i; j++){
            process(i - j, j);
            if(answer < MAX_TRY){
                return answer;
            }
        }
    }
    return -1;
}
